version: '3'
services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SECURE_CLIENT_PORT: 2182

      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.zookeeper.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12

#      ZOOKEEPER_SSL_ENABLED_PROTOCOLS: TLSv1.3,TLSv1.2
#      ZOOKEEPER_SSL_QUORUM_ENABLED_PROTOCOLS: TLSv1.3,TLSv1.2

      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.zookeeper.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS

      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory

      ZOOKEEPER_SSL_CIPHER_SUITES: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      ZOOKEEPER_SSL_CLIENT_AUTH: need
      ZOOKEEPER_AUTH_PROVIDER_X509: org.apache.zookeeper.server.auth.X509AuthenticationProvider
    healthcheck:
      test: nc -zv localhost 2181 || exit 1
      interval: 5s
      retries: 25
    volumes:
      - ./security:/etc/kafka/secrets

  kafka:
    image: "confluentinc/cp-kafka:latest"
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    restart: always
    ports:
      - "9092:9092"
      - "10092:10092"
    environment:
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092, SSL://kafka:10092

      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'

      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12

      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS

      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka_sslkey_creds

      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka_truststore_creds

      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SECURITY_PROTOCOL: SSL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,SSL:SSL
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
      KAFKA_BROKER_ID: 1

      KAFKA_ZOOKEEPER_SSL_CIPHER_SUITES: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384

      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

    healthcheck:
      test: nc -zv localhost 9092 || exit 1
      interval: 5s
      retries: 25

    volumes:
      - ./security:/etc/kafka/secrets

  kafka-client:
    image: "confluentinc/cp-kafka:latest"
    container_name: kafka-client
    depends_on:
      kafka:
        condition: service_healthy
    command: [ "/bin/bash", "-c", "sleep infinity" ]
    volumes:
      - ./security:/etc/kafka/secrets
      - ./client:/etc/kafka/client